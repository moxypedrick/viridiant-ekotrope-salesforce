//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class projectJSON2Apex {

	public class ClimateZone {
		public Integer zone {get;set;} 
		public String moistureRegime {get;set;} 

		public ClimateZone(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'zone') {
							zone = parser.getIntegerValue();
						} else if (text == 'moistureRegime') {
							moistureRegime = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'ClimateZone consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class UtilityRates {
		public String fuel {get;set;} 
		public String name {get;set;} 

		public UtilityRates(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'fuel') {
							fuel = parser.getText();
						} else if (text == 'name') {
							name = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'UtilityRates consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Rater {
		public String name {get;set;} 
		public String email {get;set;} 
		public String resnetRaterId {get;set;} 
		public String resnetProviderId {get;set;} 
		public RatingCompany ratingCompany {get;set;} 

		public Rater(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'name') {
							name = parser.getText();
						} else if (text == 'email') {
							email = parser.getText();
						} else if (text == 'resnetRaterId') {
							resnetRaterId = parser.getText();
						} else if (text == 'resnetProviderId') {
							resnetProviderId = parser.getText();
						} else if (text == 'ratingCompany') {
							ratingCompany = new RatingCompany(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Rater consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class HersRatingDetails {
		public Rater rater {get;set;} 
		public String registryId {get;set;} 
		public String ratingDate {get;set;} 
		public String fieldRatingDate {get;set;} 
		public String ratingType {get;set;} 
		public String submittedPlanId {get;set;} 
        public List<AssociatedUsers> associatedUsers {get;set;}

		public HersRatingDetails(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'rater') {
							rater = new Rater(parser);
						} else if (text == 'registryId') {
							registryId = parser.getText();
						} else if (text == 'ratingDate') {
							ratingDate = parser.getText();
						} else if (text == 'fieldRatingDate') {
							fieldRatingDate = parser.getText();
						} else if (text == 'ratingType') {
							ratingType = parser.getText();
						} else if (text == 'submittedPlanId') {
							submittedPlanId = parser.getText();
						} else if (text == 'associatedUsers') {
						associatedUsers = arrayOfAssociatedUsers(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'HersRatingDetails consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class aProjectJSON2Apex {
		public String id {get;set;} 
		public String name {get;set;} 
		public String createdAt {get;set;} 
		public String createdBy {get;set;} 
		public String lastSavedAt {get;set;} 
		public String lastSavedBy {get;set;} 
		public String selfOrPlanLastSavedAt {get;set;} 
		public Boolean isLocked {get;set;} 
		public String status {get;set;} 
		public Location location {get;set;} 
		public String notes {get;set;} 
		public String model {get;set;} 
		public String community {get;set;} 
		public String builder {get;set;} 
		public String builderPermitDateOrNumber {get;set;} 
		public HersRatingDetails hersRatingDetails {get;set;} 
		public List<RatingCompany> plans {get;set;} 
		public String masterPlanId {get;set;} 
		public String resultsUnchangedSince {get;set;} 
		public List<UtilityRates> utilityRates {get;set;} 
		public String algorithmVersion {get;set;} 

		public aProjectJSON2Apex(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'id') {
							id = parser.getText();
						} else if (text == 'name') {
							name = parser.getText();
						} else if (text == 'createdAt') {
							createdAt = parser.getText();
						} else if (text == 'createdBy') {
							createdBy = parser.getText();
						} else if (text == 'lastSavedAt') {
							lastSavedAt = parser.getText();
						} else if (text == 'lastSavedBy') {
							lastSavedBy = parser.getText();
						} else if (text == 'selfOrPlanLastSavedAt') {
							selfOrPlanLastSavedAt = parser.getText();
						} else if (text == 'isLocked') {
							isLocked = parser.getBooleanValue();
						} else if (text == 'status') {
							status = parser.getText();
						} else if (text == 'location') {
							location = new Location(parser);
						} else if (text == 'notes') {
							notes = parser.getText();
						} else if (text == 'model') {
							model = parser.getText();
						} else if (text == 'community') {
							community = parser.getText();
						} else if (text == 'builder') {
							builder = parser.getText();
						} else if (text == 'builderPermitDateOrNumber') {
							builderPermitDateOrNumber = parser.getText();
						} else if (text == 'hersRatingDetails') {
							hersRatingDetails = new HersRatingDetails(parser);
						} else if (text == 'plans') {
							plans = arrayOfRatingCompany(parser);
						} else if (text == 'masterPlanId') {
							masterPlanId = parser.getText();
						} else if (text == 'resultsUnchangedSince') {
							resultsUnchangedSince = parser.getText();
						} else if (text == 'utilityRates') {
							utilityRates = arrayOfUtilityRates(parser);
						} else if (text == 'algorithmVersion') {
							algorithmVersion = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'ProjectJSON2Apex consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class RatingCompany {
		public String name {get;set;} 
		public String id {get;set;} 

		public RatingCompany(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'name') {
							name = parser.getText();
						} else if (text == 'id') {
							id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'RatingCompany consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
    public class AssociatedUsers {
		public String name {get;set;}
		public String userType {get;set;} 
		public String fieldInspectorId {get;set;}
        public String resnetRaterId {get;set;}
        //public String userId {get; set;}
		public AssociatedUsers(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'name') {
							name = parser.getText();
						} else if (text == 'userType') {
							userType = parser.getText();
						} else if (text == 'fieldInspectorId') {
							fieldInspectorId = parser.getText();
                        } else if (text == 'resnetRaterId'){
                            resnetRaterId = parser.getText();
                        } 
                        else {
							System.debug(LoggingLevel.WARN, 'AssociatedUsers consuming unrecognized property: '+text);
							consumeObject(parser);
						} 
					}
				}
			}
		}
	}
  
	public class Location {
		public String streetAddress {get;set;} 
		public String city {get;set;} 
		public String state {get;set;} 
		public String zip {get;set;} 
		public ClimateZone climateZone {get;set;} 

		public Location(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'streetAddress') {
							streetAddress = parser.getText();
						} else if (text == 'city') {
							city = parser.getText();
						} else if (text == 'state') {
							state = parser.getText();
						} else if (text == 'zip') {
							zip = parser.getText();
						} else if (text == 'climateZone') {
							climateZone = new ClimateZone(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Location consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
		
	public static aProjectJSON2Apex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new aProjectJSON2Apex(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<RatingCompany> arrayOfRatingCompany(System.JSONParser p) {
        List<RatingCompany> res = new List<RatingCompany>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new RatingCompany(p));
        }
        return res;
    }

    private static List<AssociatedUsers> arrayOfAssociatedUsers(System.JSONParser p) {
        List<AssociatedUsers> res = new List<AssociatedUsers>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new AssociatedUsers(p));
        }
        return res;
   }

    private static List<UtilityRates> arrayOfUtilityRates(System.JSONParser p) {
        List<UtilityRates> res = new List<UtilityRates>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new UtilityRates(p));
        }
        return res;
    }
}