@isTest public class SERHBuildingRegUploadListTest {
    /**
    @isTest static void TestPager() {
        Id rtid = [SELECT Id from Recordtype where name like '%SERH%' and sobjecttype = 'ProjecT__c' limit 1][0].Id;
        Project__c proj1 = new Project__c(name='testProj', Project_Status__c = 'In Progress', recordtypeid=rtid);
        insert(proj1);
        SERHBuildingRegUploadList clss1 = new SERHBuildingRegUploadList();


        SERHBuildingRegUploadList.ProjWrapper wrapIt = new SERHBuildingRegUploadList.ProjWrapper();
        SERHBuildingRegUploadList.ProjWrapper wrapIt2 = new SERHBuildingRegUploadList.ProjWrapper(proj1);
        wrapit2.checked=true;
        //System.assert(clss1.getProjects().size() == 1, 'Projects equals one?');
        
        Test.startTest();
        clss1.cancel();
        clss1.first();
        System.assert(clss1.hasNext == false);
        System.assert(clss1.hasPrevious==false);
        System.assert(clss1.pageNumber==1);
        clss1.last();
        clss1.next();
        clss1.previous();
        clss1.process();
        //clss1.getProjects()[0].checked = true;
        clss1.getProjects().add(wrapit2);
        clss1.process();
        test.stopTest();
        
    }
**/
    @isTest static void TestPager(){
        //check initializations
        //SERHBuildingRegUploadList clss2 = new SERHBuildingRegUploadList();
        //clss2.getProjects();
        //clss2.process();
        SERHBuildingRegUploadList.ProjWrapper pw1 = new SERHBuildingRegUploadList.ProjWrapper();
        
        //bogus account
        Account duckedEsting = new Account(Name = 'Ducked Esting');
        insert(duckedEsting);
        
        //bogus contacts -- with various rating statuses
        list<Contact> toIns = new list<Contact>();
        toIns.add(new Contact(FirstName = 'Bill', LastName = 'DingEnvelope', accountid=duckedEsting.id));
        toIns.add(new Contact(FirstName = 'Sir', LastName = 'H', Number_of_Units_this_year_SERH__c = 201, accountid=duckedEsting.id));
        toIns.add(new Contact(FirstName = 'R', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277, Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id));
        insert(toIns);
        
        //make projects to iterate over
        Id rtid = [SELECT Id from Recordtype where name like '%SERH%' and sobjecttype = 'Project__c' limit 1][0].Id;
        list<Project__c> pToIns = new list<Project__c>();
        Project__c proj1 = new Project__c(name='testProj', Project_Status__c = 'In Progress', recordtypeid=rtid, Hers_Rater__C = toIns[0].id);
        pToIns.add(proj1);
        pToIns.add(new Project__c(name='testProj2', Project_Status__c = 'In Progress', recordtypeid=rtid, Hers_Rater__C = toIns[1].id));
        pToIns.add(new Project__c(name='testProj3', Project_Status__c = 'In Progress', recordtypeid=rtid, Hers_Rater__C = toIns[2].id));
        pToIns.add(new Project__c(name = 'testProj4NoR8r', Project_Status__c = 'In Progress', recordtypeid=rtid));
        insert(pToIns);
        
        
        insert(new SERH_Data__C(project__c = proj1.id, Export_Type__c = 'HERS', Rating_type__c = 'CONFIRMED', ENERGY_STAR_v3__c = 'Pass'));
        
      
        
        Test.startTest();
        
        
        SERHBuildingRegUploadList clss1 = new SERHBuildingRegUploadList();
        
        System.Debug(clss1.getProjects().size());
        System.Debug('Records: ' + String.valueof(clss1.con.getRecords().size()));
        
        clss1.process();
        
        for (SERHBuildingRegUploadList.ProjWrapper i: clss1.getProjects()){
            i.checked=true;
            System.Debug('checking '+i.proj.Name);
        }
        clss1.process();
        system.debug('hasnext: '+clss1.hasNext);
        
        clss1.first();
        clss1.last();
        clss1.next();
        clss1.lastRefresh = 'hello Wrld';
        clss1.previous();
        System.Debug('hasNext' + String.valueof(clss1.hasNext));
        System.Debug('hasPrev' + clss1.hasPrevious);
        System.Debug('pageNumber'+String.valueOf(clss1.pageNumber));
        clss1.setState('okiedokely');
        System.Debug('state set to '+clss1.getState());
        //        clss1.cancel()
        
        Test.stopTest();
        
        system.debug([select name, id from serh_data__c where createddate = today]);
    }
    
    
    @isTest static void TestPager2(){
   
        //bogus account
        Account duckedEsting = new Account(Name = 'Ducked Esting');
        insert(duckedEsting);
        
        //bogus contacts -- with various rating statuses
        list<Contact> toIns = new list<Contact>();
        Contact Bill = new Contact(FirstName = 'Bill', LastName = 'DingEnvelope',  accountid=duckedEsting.id);
      	Contact Sir = new Contact(FirstName = 'Sir', LastName = 'H', Number_of_Units_this_year_SERH__c = 201,  accountid=duckedEsting.id);
        Contact Sir2 = new Contact(FirstName = 'Sir2', LastName = 'H', Number_of_Units_this_year_SERH__c = 201,  accountid=duckedEsting.id);
        Contact R = new Contact(FirstName = 'R', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        Contact R2 = new Contact(FirstName = 'R2', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        Contact R3 = new Contact(FirstName = 'R3', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        Contact R4 = new Contact(FirstName = 'R4', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        
        toIns.add(Bill);
        toIns.add(Sir);
        toIns.add(R);
        toIns.add(R2);
        toIns.add(R3);
        toIns.add(R4);
        
        insert(toIns);
        
        list<Project__C> insertProjects = new list<Project__c>();
        Project__c regFile = new Project__C(Name = '123 Main', HERS_Rater__c = Bill.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c regField = new Project__C(Name = '123 Main', Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c estarFile = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass', HERS_Rater__c = R.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c estarField = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass',Rating_Field_Inspector__c = R2.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c regFile2 = new Project__C(Name = '123 Main', HERS_Rater__c = R3.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c regField2 = new Project__C(Name = '123 Main', Rating_Field_Inspector__c = R4.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        
        Project__c estarFile2 = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass',HERS_Rater__c = R.id, Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c estarField2 = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass',Rating_Field_Inspector__c = R2.id, EC_Registration_Date__c = date.newInstance(2020, 4, 3), recordtypeid = '0120B000000t8JVQAY');
   
        insertProjects.add(regFile);
        insertProjects.add(regFile2);
        insertProjects.add(estarFile);
        insertProjects.add(estarFile2);
        insertProjects.add(regField);
        insertProjects.add(estarField);
        insertProjects.add(regField2);
        insertProjects.add(estarField2);
        insert(insertProjects);
        
        list<inspections__c> insertInsp = new list<Inspections__c>();
        insertInsp.add(new Inspections__c(Project__c = regFile.id, HERS_Rater_Name_SERH__c = Bill.id, QA_Year_SERH__c = '2020', recordTypeID = '0120B0000005kLU'));
        insertInsp.add(new Inspections__c(Project__c = estarFile.id, HERS_Rater_Name_SERH__c = Bill.id, Energy_Star__c = TRUE, QA_Year_SERH__c = '2020', recordTypeID = '0120B0000005kLU'));
        insertInsp.add(new Inspections__c(Project__C = regField.id, HERS_Rater_Name_SERH__c = Sir.id, QA_Year_SERH__c = '2020', recordTypeID = '0120B0000005kLZQAY'));
        insertInsp.add(new Inspections__c(Project__C = estarField2.id, HERS_Rater_Name_SERH__c = Sir.id, Energy_Star__c = TRUE, QA_Year_SERH__c = '2020', recordTypeID = '0120B0000005kLZQAY'));
        insertInsp.add(new Inspections__c(Project__C = estarField.id, Energy_Star__c = TRUE, QA_Year_SERH__c = '2020', recordTypeID = '0120B0000005kLZQAY'));
        
        insertInsp.add(new Inspections__c(Project__c = regFile2.id, HERS_Rater_Name_SERH__c = R3.id, QA_Year_SERH__c = '2020', recordTypeID = '0120B0000005kLU'));
        insertInsp.add(new Inspections__c(Project__C = regField2.id, HERS_Rater_Name_SERH__c = R4.id, QA_Year_SERH__c = '2020', recordTypeID = '0120B0000005kLZQAY'));
        
        insert(insertInsp); 
        
        
        Test.startTest();
        SERHBuildingRegUploadList clss3 = new SERHBuildingRegUploadList();
        System.Debug(clss3.getContacts().size());
        
        for (SERHBuildingRegUploadList.cContact n : clss3.contactList){
            System.Debug(n.name);
            System.Debug('checking'+ n.name);
            //System.assert(condition)
        }
        Test.stopTest();
        
    }

         
}