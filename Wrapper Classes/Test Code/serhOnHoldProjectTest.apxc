@isTest

public class serhOnHoldProjectTest {
        
        @isTest static void TestPager(){
            //check initializations
            serhQaReportWrapperClass clss2 = new serhQaReportWrapperClass();
            //clss2.cContact
            clss2.getContacts();
            
            List<recordtype> recordTypeList = [select name, id from recordtype where name= 'Auto QA' and sobjecttype = 'Inspections__c'];
        	id inspRecordId = recordTypeList.get(0).id;
            
            List<recordtype> recordTypeList2 = [select name, id from recordtype where name= 'SERH Project' and sobjecttype = 'Project__c'];
        	id projRecordId = recordTypeList2.get(0).id;
            
            //bogus account
            Account duckedEsting = new Account(Name = 'Ducked Esting');
            insert(duckedEsting);
            
            //bogus contacts -- with various rating statuses
            list<Contact> toIns = new list<Contact>();
            Contact Bill = new Contact(FirstName = 'Bill', LastName = 'DingEnvelope',  accountid=duckedEsting.id);
            Contact Sir = new Contact(FirstName = 'Sir', LastName = 'H', Number_of_Units_this_year_SERH__c = 201,  accountid=duckedEsting.id);
            Contact Sir2 = new Contact(FirstName = 'Sir2', LastName = 'H', Number_of_Units_this_year_SERH__c = 201,  accountid=duckedEsting.id);
            
            Contact R = new Contact(FirstName = 'R', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
            Contact R2 = new Contact(FirstName = 'R2', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
            Contact R3 = new Contact(FirstName = 'R3', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
            Contact R4 = new Contact(FirstName = 'R4', LastName = 'Fortinay', Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
            
            
            toIns.add(Bill);
            toIns.add(Sir);
            toIns.add(Sir2);
            toIns.add(R);
            toIns.add(R2);
            toIns.add(R3);
            toIns.add(R4);
            insert(toIns);
            
            list<Qualifications_del__c> toQuals = new list<Qualifications_del__c>();
            Qualifications_del__c qualEstarFileNoRegFileR = new Qualifications_del__c(Qualifications_for__c =R.id, Approved_for_Auto_Upload__c = True, HERS_RTIN_Rater_Identification_Number__c ='af234f');
            Qualifications_del__c qualNoEstarFileRegFileR2 = new Qualifications_del__c(Qualifications_for__c = R2.id, Approved_for_Auto_Upload__c = False, HERS_RTIN_Rater_Identification_Number__c ='af234f');
            Qualifications_del__c qualEstarFileNoRegFileR3 = new Qualifications_del__c(Qualifications_for__c =R3.id, Approved_for_Auto_Upload__c = True, HERS_RTIN_Rater_Identification_Number__c ='af234f');
            Qualifications_del__c qualNoEstarFileRegFileR4 = new Qualifications_del__c(Qualifications_for__c = R4.id, Approved_for_Auto_Upload__c = False, HERS_RTIN_Rater_Identification_Number__c ='af234f');
            Qualifications_del__c qualEstarFileNoRegFileBill = new Qualifications_del__c(Qualifications_for__c =Bill.id, Approved_for_Auto_Upload__c = True, HERS_RTIN_Rater_Identification_Number__c ='af234f');
            Qualifications_del__c qualNoEstarFileRegFileSir = new Qualifications_del__c(Qualifications_for__c = Sir.id, Approved_for_Auto_Upload__c = False, HERS_RTIN_Rater_Identification_Number__c ='af234f');
            Qualifications_del__c qualEstarFileNoRegFileSir2 = new Qualifications_del__c(Qualifications_for__c =Sir2.id, Approved_for_Auto_Upload__c = True, HERS_RTIN_Rater_Identification_Number__c ='af234f');
            
            toQuals.add(qualEstarFileNoRegFileR);
            toQuals.add(qualNoEstarFileRegFileR2);
            toQuals.add(qualEstarFileNoRegFileR3);
            toQuals.add(qualNoEstarFileRegFileR4);
            toQuals.add(qualEstarFileNoRegFileBill);
            toQuals.add(qualNoEstarFileRegFileSir);
            toQuals.add(qualEstarFileNoRegFileSir2);
            
            insert(toQuals);
            
            list<Project__C> insertProjects = new list<Project__c>();
            Project__c regFile = new Project__C(Name = '123 Main', HERS_Rater__c = Bill.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w112');
            Project__c regField = new Project__C(Name = '123 Main', HERS_Rater__c = Sir.id,Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w212');
            
            Project__c estarFile = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass', HERS_Rater__c = R.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w312');
            Project__c estarField = new Project__C(Name = '123 Main',HERS_Rater__c = R2.id, Energy_Star_v3__c = 'pass',Rating_Field_Inspector__c = R2.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w412');
            
            Project__c regFile2 = new Project__C(Name = '123 Main', HERS_Rater__c = Bill.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w512');
            Project__c regField2 = new Project__C(Name = '123 Main', HERS_Rater__c = Bill.id,Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w612');
            
            Project__c estarFile2 = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass',HERS_Rater__c = R.id, Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w712');
            Project__c estarField2 = new Project__C(Name = '123 Main', HERS_Rater__c = Bill.id,Energy_Star_v3__c = 'pass',Rating_Field_Inspector__c = R2.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = projRecordId, project_Status__c = 'On Hold',Ekotrope_ID__c ='asr3w812');
            
            
            
            insertProjects.add(regFile);
            insertProjects.add(regFile2);
            insertProjects.add(estarFile);
            insertProjects.add(estarFile2);
            insertProjects.add(regField);
            insertProjects.add(estarField);
            insertProjects.add(regField2);
            insertProjects.add(estarField2);
            insert(insertProjects);
            
            list<inspections__c> insertInsp = new list<Inspections__c>();
            insertInsp.add(new Inspections__c(Project__c = regFile.id, HERS_Rater_Name_SERH__c = Bill.id, QA_Year_SERH__c = '2019', recordTypeID = inspRecordId));
            insertInsp.add(new Inspections__c(Project__c = regField.id, HERS_Rater_Name_SERH__c = Bill.id, Energy_Star__c = TRUE, QA_Year_SERH__c = '2019', recordTypeID = inspRecordId));
            insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = Sir.id, QA_Year_SERH__c = '2019', recordTypeID = inspRecordId));
            insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = Sir.id, Energy_Star__c = TRUE, QA_Year_SERH__c = '2019', recordTypeID = inspRecordId));
            insertInsp.add(new Inspections__c(Project__C = regFile.id, Energy_Star__c = TRUE, QA_Year_SERH__c = '2019', recordTypeID = inspRecordId));
            
            insertInsp.add(new Inspections__c(Project__c = regFile.id, HERS_Rater_Name_SERH__c = R3.id, QA_Year_SERH__c = '2019', recordTypeID = inspRecordId,Ekotrope_QA_error__c=true,Building_Registry_Upload_Error__c=false, mismatched_RTIN__c=true));  
                                                                                    
            insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = R4.id, QA_Year_SERH__c = '2019', recordTypeID = inspRecordId));
            insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = R.id, QA_Year_SERH__c = '2018', recordTypeID = inspRecordId));
            
            
            insert(insertInsp); 
            
            list<SERH_Data__c> insertSerhData = new list<SERH_Data__c>();
            //ENERGY_STAR_v3__c, Rating_Type__c, Fee_per_Unit__c, Project_Type__c from SERH_Data__r where Export_Type__c = 'HERS'
            insertSerhData.add(new SERH_Data__c(Project__c = regFile.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));
            insertSerhData.add(new SERH_Data__c(Project__c = regFile2.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));
            insertSerhData.add(new SERH_Data__c(Project__c = estarFile.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));
            insertSerhData.add(new SERH_Data__c(Project__c = estarFile2.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));
            insertSerhData.add(new SERH_Data__c(Project__c = regField.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));          
            insertSerhData.add(new SERH_Data__c(Project__c = estarField.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));                                                                                      
            insertSerhData.add(new SERH_Data__c(Project__c = regField2.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));
            insertSerhData.add(new SERH_Data__c(Project__c = estarField2.id,ENERGY_STAR_v3__c='pass',Rating_Type__c='dog',Fee_per_Unit__c=55.00, Export_Type__c = 'HERS'));

            insert(insertSerhData);
            
            
            new serhOnHoldProjects.ProjWrapper();
            
            
            
            Test.startTest();
            serhOnHoldProjects clss3 = new serhOnHoldProjects();
            List<serhOnHoldProjects.ProjWrapper> pws = clss3.getProjects();
            
            pws.get(1).checked=true;

            
            clss3.process();
            
            Test.stopTest();
            
        }
        
    }