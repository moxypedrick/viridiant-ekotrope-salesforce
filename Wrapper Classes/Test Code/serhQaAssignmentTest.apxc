@isTest public class serhQaAssignmentTest {


    @isTest static void TestPager(){
    
        
        //check initializations
        //serhQaReportWrapperClass clss2 = new serhQaReportWrapperClass();
        //clss2.cContact
        //clss2.getContacts();

        //bogus account
        Account duckedEsting = new Account(Name = 'Ducked Esting');
        insert(duckedEsting);
        
        //bogus contacts -- with various rating statuses
        list<Contact> toIns = new list<Contact>();
        Contact Bill = new Contact(FirstName = 'Bill', LastName = 'DingEnvelope', Show_in_SERH_as_QADd__c = true,  accountid=duckedEsting.id);
      	Contact Sir = new Contact(FirstName = 'Sir', LastName = 'H', Show_in_SERH_as_QADd__c = true ,Number_of_Units_this_year_SERH__c = 201,  accountid=duckedEsting.id);
        Contact Sir2 = new Contact(FirstName = 'Sir2', LastName = 'H', Number_of_Units_this_year_SERH__c = 201,  accountid=duckedEsting.id);
        
        Contact R = new Contact(FirstName = 'R', LastName = 'Fortinay', Show_in_SERH_as_QADd__c = true ,Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        Contact R2 = new Contact(FirstName = 'R2', LastName = 'Fortinay', Show_in_SERH_as_QADd__c = true ,Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        Contact R3 = new Contact(FirstName = 'R3', LastName = 'Fortinay', Show_in_SERH_as_QADd__c = true ,Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        Contact R4 = new Contact(FirstName = 'R4', LastName = 'Fortinay',Show_in_SERH_as_QADd__c = true , Number_of_Units_this_year_SERH__c = 277,  Number_of_File_QA_Started__c = 1, accountid=duckedEsting.id);
        toIns.add(Bill);
        toIns.add(Sir);
        toIns.add(R);
        toIns.add(R2);
        toIns.add(R3);
        toIns.add(R4);
        insert(toIns);
        
        list<Project__C> insertProjects = new list<Project__c>();
        Project__c regFile = new Project__C(Name = '123 Main', HERS_Rater__c = Bill.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c regField = new Project__C(Name = '123 Main', Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        
        Project__c estarFile = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass', HERS_Rater__c = R.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c estarField = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass',Rating_Field_Inspector__c = R2.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        
        Project__c regFile2 = new Project__C(Name = '123 Main', HERS_Rater__c = Bill.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c regField2 = new Project__C(Name = '123 Main', Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        
        Project__c estarFile2 = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass',HERS_Rater__c = R.id, Rating_Field_Inspector__c = Sir.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        Project__c estarField2 = new Project__C(Name = '123 Main', Energy_Star_v3__c = 'pass',Rating_Field_Inspector__c = R2.id, EC_Registration_Date__c = date.newInstance(2019, 4, 3), recordtypeid = '0120B000000t8JVQAY');
        
        
        
        insertProjects.add(regFile);
        insertProjects.add(regFile2);
        insertProjects.add(estarFile);
        insertProjects.add(estarFile2);
        insertProjects.add(regField);
        insertProjects.add(estarField);
        insertProjects.add(regField2);
        insertProjects.add(estarField2);
        insert(insertProjects);
        
        list<inspections__c> insertInsp = new list<Inspections__c>();
        insertInsp.add(new Inspections__c(Project__c = regFile.id, HERS_Rater_Name_SERH__c = Bill.id,Status__c = 'New', QA_Year_SERH__c = '2019', recordTypeID = '0120B0000005kLU'));
        insertInsp.add(new Inspections__c(Project__c = regFile.id, HERS_Rater_Name_SERH__c = Bill.id,Status__c = 'New', Energy_Star__c = TRUE, QA_Year_SERH__c = '2019', recordTypeID = '0120B0000005kLU'));
        insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = Sir.id, Status__c = 'New',QA_Year_SERH__c = '2019', recordTypeID = '0120B0000005kLZQAY'));
        insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = Sir.id,Status__c = 'New', Energy_Star__c = TRUE, QA_Year_SERH__c = '2019', recordTypeID = '0120B0000005kLZQAY'));
        insertInsp.add(new Inspections__c(Project__C = regFile.id, Energy_Star__c = TRUE, QA_Year_SERH__c = '2019',Status__c = 'New', recordTypeID = '0120B0000005kLZQAY'));
        
        insertInsp.add(new Inspections__c(Project__c = regFile.id, HERS_Rater_Name_SERH__c = R3.id,Status__c = 'New', QA_Year_SERH__c = '2019', recordTypeID = '0120B0000005kLU'));
        insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = R4.id,Status__c = 'New', QA_Year_SERH__c = '2019', recordTypeID = '0120B0000005kLZQAY'));
        insertInsp.add(new Inspections__c(Project__C = regFile.id, HERS_Rater_Name_SERH__c = R.id, Status__c = 'New',QA_Year_SERH__c = '2018', recordTypeID = '0120B0000005kLZQAY'));

        
        insert(insertInsp); 
        
        Test.startTest();
            serhQaAssignment clss3 = new serhQaAssignment();
            clss3.getItems();
            System.Debug(clss3.getInspections().size());
            
            for (serhQaAssignment.InspWrapper n : clss3.getInspections()){
                System.Debug('checking'+ n.project);
                System.Debug('year'+n.QA_Year_SERH);
                //System.assert(condition)
            }
            //clss3.QA_Year_SERH=2018;
        	List<serhQaAssignment.InspWrapper> insp = clss3.getInspections();
        	insp.get(1).checked = true;
        	
        	clss3.assign();
            clss3.syncWithEkotrope();
        clss3.setTechnicians(null);
        Test.stopTest();
    }
}